package com.atguigu.springcloud.filter;

import lombok.extern.slf4j.Slf4j;
import org.springframework.cloud.gateway.filter.GatewayFilterChain;
import org.springframework.cloud.gateway.filter.GlobalFilter;
import org.springframework.core.Ordered;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;
import reactor.core.publisher.Mono;

@Slf4j
@Component
public class MyLogGateWaySecondFilter implements GlobalFilter, Ordered {
    @Override
    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
        boolean haha = exchange.getRequest().getQueryParams().containsKey("haha");
        if(!haha){
            log.info("*********haha为空，非法用户");
            exchange.getResponse().setStatusCode(HttpStatus.NOT_ACCEPTABLE);
            return exchange.getResponse().setComplete(); //如果不满足过滤条件就停止往下过滤
        }
        log.info("------------------------");
        return chain.filter(exchange); //如果该过滤器满足则继续往下走，走其他的过滤器
    }

    @Override
    public int getOrder() {
        return 1;  //该数字代表该过滤器的优先级，数字越小优先级越高
    }
}
